<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="edu.kh.semi.board.model.mapper.BoardMapper">

	<resultMap type="Board" id="Board_rm">
		<!-- id 태그 : PK 역할을 하는 컬럼, 필드를 작성하는 태그 -->
		<id property="boardNo"  column="BOARD_NO"/>
			
		<collection 
			property = "imageList" 
			select   = "selectImageList"
			column   = "BOARD_NO"
			javaType = "java.util.ArrayList"
			ofType   = "Image"
		/>
		
		<collection 
			property = "commentList" 
			select   = "selectCommentList"
			column   = "BOARD_NO"
			javaType = "java.util.ArrayList"
			ofType   = "Comment"
		/>
	</resultMap>

	<!-- 게시판 글쓰기 -->
	<insert id="insertBoard" useGeneratedKeys="true" parameterType="Board">
		<selectKey order="BEFORE" resultType="_int" keyProperty="boardNo">
  			SELECT SEQ_BOARD_NO.NEXTVAL FROM DUAL
  		</selectKey>
		INSERT INTO "BOARD"
		VALUES(#{boardNo},
		#{boardTitle},
		#{boardContent},
		DEFAULT,
		NULL,
		DEFAULT,
		DEFAULT,
		#{boardCheckNotice},
		#{boardCheckPublic},
		#{memberNo})
	</insert>
	
	
	
	<select id="selectOne" resultMap="Board_rm">
      SELECT BOARD_NO, BOARD_TITLE ,BOARD_CONTENT, MEMBER_NO,READ_COUNT,
         TO_CHAR(BOARD_WRITE_DATE, 'YYYY"년" MM"월" DD"일" HH24:MI:SS') BOARD_WRITE_DATE,
         TO_CHAR(BOARD_UPDATE_DATE,'YYYY"년" MM"월" DD"일" HH24:MI:SS') BOARD_UPDATE_DATE,
         MEMBER_NICKNAME
         
      FROM BOARD
      JOIN "MEMBER" USING(MEMBER_NO)
      WHERE BOARD_NO = #{boardNo}
      AND BOARD_DEL_FL='N'	
	</select>
	
	
	<select id="selectBoard">
		SELECT * FROM (
			SELECT * FROM (
				SELECT BOARD_NO, BOARD_TITLE, MEMBER_NICKNAME, READ_COUNT, BOARD_WRITE_DATE, BOARD_CHECK_NOTICE,
				(
					SELECT COUNT(*)
					FROM "COMMENT" C
					WHERE C.BOARD_NO = B.BOARD_NO
					AND COMMENT_DEL_FL = 'N'
				) COMMENT_COUNT
				FROM BOARD B
				JOIN "MEMBER" USING(MEMBER_NO)
				WHERE BOARD_DEL_FL='N'
					AND BOARD_CHECK_NOTICE='Y'
				ORDER BY BOARD_NO DESC
			)
			WHERE 4 >= ROWNUM
			
			UNION
		
			SELECT * FROM (
				SELECT BOARD_NO, BOARD_TITLE, MEMBER_NICKNAME, READ_COUNT, BOARD_WRITE_DATE, BOARD_CHECK_NOTICE,
				(
					SELECT COUNT(*)
					FROM "COMMENT" C
					WHERE C.BOARD_NO = B.BOARD_NO
					AND COMMENT_DEL_FL = 'N'
				) COMMENT_COUNT
				FROM BOARD B
				JOIN "MEMBER" USING(MEMBER_NO)
				WHERE BOARD_DEL_FL='N'
				<choose>
					<when test='boardType=="member"'>
					AND BOARD_CHECK_NOTICE='N'
					AND BOARD_CHECK_PUBLIC='N'
					</when>
					
					<when test='boardType=="public"'>
					AND BOARD_CHECK_NOTICE='N'
					AND BOARD_CHECK_PUBLIC='Y'
					</when>
					
					<when test='boardType=="notice"'>
					AND BOARD_CHECK_NOTICE='Y'
					</when>
				</choose>
				ORDER BY BOARD_NO DESC
			)
		)
		ORDER BY BOARD_CHECK_NOTICE DESC, BOARD_NO DESC
			
	</select>
	
<!-- 	
	<select id="selectBoard">
		SELECT BOARD_NO, BOARD_TITLE, MEMBER_NICKNAME, READ_COUNT, BOARD_WRITE_DATE,
		(
			SELECT COUNT(*)
			FROM "COMMENT" C
			WHERE C.BOARD_NO = B.BOARD_NO
			AND COMMENT_DEL_FL = 'N'
		) COMMENT_COUNT
		FROM BOARD B
		JOIN "MEMBER" USING(MEMBER_NO)
		WHERE BOARD_DEL_FL='N'
		<choose>
			<when test='boardType=="member"'>
			AND BOARD_CHECK_NOTICE='N'
			AND BOARD_CHECK_PUBLIC='N'
			</when>
			
			<when test='boardType=="public"'>
			AND BOARD_CHECK_NOTICE='N'
			AND BOARD_CHECK_PUBLIC='Y'
			</when>
			
			<when test='boardType=="notice"'>
			AND BOARD_CHECK_NOTICE='Y'
			</when>
		</choose>
		ORDER BY BOARD_NO DESC
	</select>
	 -->
	
	

	<!-- 게시물 수 세기 -->
   <select id="getListCount" resultType="_int">
      SELECT COUNT(*)
      FROM "BOARD"
      JOIN "MEMBER" USING(MEMBER_NO)
      WHERE BOARD_DEL_FL='N'
      <choose>
         <when test='boardType=="member"'>
         AND BOARD_CHECK_NOTICE='N'
         AND BOARD_CHECK_PUBLIC='N'
         </when>
         
         <when test='boardType=="public"'>
         AND BOARD_CHECK_NOTICE='N'
         AND BOARD_CHECK_PUBLIC='Y'
         </when>
         
         <when test='boardType=="notice"'>
         AND BOARD_CHECK_NOTICE='Y'
         </when>
      </choose>
      
	</select>
	
	
	<!-- 검색 목록 조회 -->
	<select id="selectSearchBoard">
		SELECT BOARD_NO, BOARD_TITLE, MEMBER_NICKNAME, READ_COUNT, BOARD_WRITE_DATE,
		(
			SELECT COUNT(*)
			FROM "COMMENT" C
			WHERE C.BOARD_NO = B.BOARD_NO
		) COMMENT_COUNT
		FROM BOARD B
		JOIN "MEMBER" USING(MEMBER_NO)
		WHERE BOARD_DEL_FL='N'
		<choose>
			<when test='boardType=="member"'>
			AND BOARD_CHECK_NOTICE='N'
			AND BOARD_CHECK_PUBLIC='N'
			</when>
			
			<when test='boardType=="public"'>
			AND BOARD_CHECK_NOTICE='N'
			AND BOARD_CHECK_PUBLIC='Y'
			</when>
			
			<when test='boardType=="notice"'>
			AND BOARD_CHECK_NOTICE='Y'
			</when>
		</choose>
		
		<choose>
			<when test='key=="t"'>
				AND BOARD_TITLE LIKE '%'|| #{query} ||'%'
			</when>
			
			<when test='key=="c"'>
				AND BOARD_CONTENT LIKE '%'|| #{query} ||'%'
			</when>
			
			<when test='key=="tc"'>
				AND (BOARD_TITLE LIKE '%'|| #{query} ||'%'
					OR
					 BOARD_CONTENT LIKE '%'|| #{query} ||'%')
			</when>
			
			<when test='key=="w"'>
				AND MEMBER_NICKNAME LIKE '%'|| #{query} ||'%'
			</when>
		</choose>
		
		ORDER BY BOARD_NO DESC
	</select>
	
	
	<!-- 검색 조건에 맞는 게시글 수 조회 -->
	<select id="getSearchCount">
		SELECT COUNT(*)
		FROM "BOARD"
		<!-- 작성자 검색인 경우 -->
		<if test='key=="w"'>
		JOIN "MEMBER" USING (MEMBER_NO)
		</if>
		WHERE BOARD_DEL_FL='N'
		<choose>
			<when test='boardType=="member"'>
			AND BOARD_CHECK_NOTICE='N'
			AND BOARD_CHECK_PUBLIC='N'
			</when>
			
			<when test='boardType=="public"'>
			AND BOARD_CHECK_NOTICE='N'
			AND BOARD_CHECK_PUBLIC='Y'
			</when>
			
			<when test='boardType=="notice"'>
			AND BOARD_CHECK_NOTICE='Y'
			</when>
		</choose>
		
		<choose>
			<when test='key=="t"'>
				AND BOARD_TITLE LIKE '%'|| #{query} ||'%'
			</when>
			
			<when test='key=="c"'>
				AND BOARD_CONTENT LIKE '%'|| #{query} ||'%'
			</when>
			
			<when test='key=="tc"'>
				AND (BOARD_TITLE LIKE '%'|| #{query} ||'%'
					OR
					 BOARD_CONTENT LIKE '%'|| #{query} ||'%')
			</when>
			
			<when test='key=="w"'>
				AND MEMBER_NICKNAME LIKE '%'|| #{query} ||'%'
			</when>
		</choose>
		
	</select>
	
	
	<!-- 게시글 이미지 삽입 -->
	<insert id="insertUploadList" parameterType="list">
		INSERT INTO "IMAGE"
		<foreach collection="list" item="img" open="(" close=")" separator="UNION">
			SELECT NEXT_IMG_NO(),
					#{img.imgPath},
					#{img.imgOriginalName},
					#{img.imgOrder},
					#{img.boardNo},
					#{img.imgReName}
			FROM DUAL
					
		</foreach>
	</insert>
	
	
	<!-- 상세 조회한 게시글의 이미지 목록 조회 -->
	<select id="selectImageList" resultType="Image">
		SELECT * 
		FROM "IMAGE"
		WHERE BOARD_NO = #{boardNo}
		ORDER BY IMG_ORDER
	</select>
	
	
	<!-- 게시물 삭제 -->
	<update id="deleteBoard">
		UPDATE "BOARD" SET 
		BOARD_DEL_FL ='Y'
		WHERE BOARD_NO = #{boardNo}
		AND(
			MEMBER_NO = #{memberNo} 
			OR 1 = (SELECT COUNT(*) FROM "MEMBER" WHERE AUTHORITY = 1 AND MEMBER_NO = 3)
		)
	</update>
	
	
	<!-- 게시물 수정 -->
	<update id="updateBoard">
		UPDATE "BOARD" SET
		BOARD_TITLE = #{boardTitle},
		BOARD_CONTENT= #{boardContent}
		WHERE BOARD_NO = #{boardNo}
		AND(
			MEMBER_NO = #{memberNo} 
			OR 1 = (SELECT COUNT(*) FROM "MEMBER" WHERE AUTHORITY = 1 AND MEMBER_NO = 3)
		)
		AND BOARD_DEL_FL='N'
	</update>
	
	<!-- 이미지 수정 -->
	<update id="updateImage">
		UPDATE "IMAGE" SET
		IMG_ORIGINALNAME=#{imgOriginalName},
		IMG_RENAME=#{imgReName}
		WHERE BOARD_NO=#{boardNo}
		AND IMG_ORDER=#{imgOrder}
	</update>
	
	<!-- 이미지 삽입  -->
	<insert id="insertImage">
		INSERT INTO "IMAGE"
		VALUES(NEXT_IMG_NO(),
				#{imgPath},
				#{imgOriginalName},
				#{imgOrder},
				#{boardNo},
				#{imgReName}
				)
	</insert>
	
	
	<!-- 게시글 이미지 삭제 -->
	<delete id="deleteImage">
		DELETE FROM "IMAGE"
		WHERE IMG_ORDER IN (${deleteOrder})
		AND BOARD_NO = #{boardNo}
	</delete>
	
	
	
	<!-- 조회수 1증가 -->
	<update id="updateReadCount">
		UPDATE "BOARD" SET
		READ_COUNT = READ_COUNT + 1
		WHERE BOARD_NO = #{boardNo}
	</update>
	
	<!-- 조회수 조회 -->
	<select id="selectReadCount">
		SELECT READ_COUNT
		FROM "BOARD"
		WHERE BOARD_NO=#{boardNo}
	</select>
	
	
  	<!-- 댓글 목록 조회 -->
  	<select id="selectCommentList" resultType="Comment">
		SELECT LEVEL, C.* FROM
			(SELECT COMMENT_NO, COMMENT_CONTENT,
			    TO_CHAR(COMMENT_WRITE_DATE, 'YYYY"년" MM"월" DD"일" HH24"시" MI"분" SS"초"') COMMENT_WRITE_DATE,
			    BOARD_NO, MEMBER_NO, MEMBER_NICKNAME, PROFILE_IMG, PARENT_COMMENT_NO, COMMENT_DEL_FL
			FROM "COMMENT"
			JOIN MEMBER USING(MEMBER_NO)
			WHERE BOARD_NO = #{boardNo}) C
		WHERE COMMENT_DEL_FL = 'N'
		OR 0 != (SELECT COUNT(*) FROM "COMMENT" SUB
						WHERE SUB.PARENT_COMMENT_NO = C.COMMENT_NO
						AND COMMENT_DEL_FL = 'N')
		START WITH PARENT_COMMENT_NO IS NULL
		CONNECT BY PRIOR COMMENT_NO = PARENT_COMMENT_NO
		ORDER SIBLINGS BY COMMENT_NO
  	</select>
  	
</mapper>
